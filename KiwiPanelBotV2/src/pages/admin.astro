---
import Layout from '../layouts/Layout.astro';

// Simuler les données d'administration
const botStats = {
	status: "online",
	uptime: "3h 24m",
	commandsUsed: 1247,
	activeUsers: 156,
	totalCommands: 47
};

const recentCommands = [
	{ user: "Viewer123", command: "!aquarium", time: "Il y a 2 min" },
	{ user: "GamerPro", command: "!help", time: "Il y a 5 min" },
	{ user: "StreamFan", command: "!discord", time: "Il y a 7 min" },
	{ user: "TwitchUser", command: "!socials", time: "Il y a 12 min" },
];

const giveaways = [
	{ 
		id: 1, 
		title: "Clavier mécanique RGB", 
		description: "Un superbe clavier gaming pour streamer comme un pro !",
		participants: 47,
		status: "active",
		endDate: "2025-10-01"
	},
	{ 
		id: 2, 
		title: "Carte Steam 50€", 
		description: "Pour acheter tous vos jeux préférés",
		participants: 89,
		status: "active",
		endDate: "2025-09-28"
	},
	{ 
		id: 3, 
		title: "Setup complet streaming", 
		description: "Micro, webcam et éclairage professionnel",
		participants: 156,
		status: "ended",
		endDate: "2025-09-20"
	}
];

const webhookStats = {
	totalUsers: 1247,
	totalPasses: 89,
	todayActivity: 67
};
---

<Layout title="Panel Admin - TwitchBot" isAdmin={true}>
	<div class="admin-header">
		<h1 class="page-title">⚙️ Panel d'Administration</h1>
		<p class="page-subtitle">Gérez entièrement votre bot Twitch</p>
	</div>

	<!-- Bot Status Section -->
	<section class="status-section">
		<div class="status-cards">
			<div class="status-card">
				<div class="status-icon">🤖</div>
				<div class="status-info">
					<h3>Statut du Bot</h3>
					<span class={`status status-${botStats.status === 'online' ? 'online' : 'offline'}`}>
						{botStats.status === 'online' ? '✅ En ligne' : '❌ Hors ligne'}
					</span>
					<p>Uptime: {botStats.uptime}</p>
				</div>
				<div class="status-actions">
					<button class="btn btn-success">▶️ Redémarrer</button>
					<button class="btn btn-error">⏹️ Arrêter</button>
				</div>
			</div>
		</div>
	</section>

	<!-- Stats Overview -->
	<section class="overview-section">
		<h2 class="section-title">📊 Vue d'ensemble</h2>
		
		<div class="overview-grid">
			<div class="overview-card">
				<div class="overview-icon">💬</div>
				<div class="overview-content">
					<h4>Commandes utilisées</h4>
					<div class="overview-value">{botStats.commandsUsed.toLocaleString()}</div>
					<span class="overview-change text-success">+12% cette semaine</span>
				</div>
			</div>

			<div class="overview-card">
				<div class="overview-icon">👥</div>
				<div class="overview-content">
					<h4>Utilisateurs actifs</h4>
					<div class="overview-value">{botStats.activeUsers}</div>
					<span class="overview-change text-success">+8% aujourd'hui</span>
				</div>
			</div>

			<div class="overview-card">
				<div class="overview-icon">📝</div>
				<div class="overview-content">
					<h4>Total commandes</h4>
					<div class="overview-value">{botStats.totalCommands}</div>
					<span class="overview-change text-secondary">Disponibles</span>
				</div>
			</div>

			<div class="overview-card">
				<div class="overview-icon">🎁</div>
				<div class="overview-content">
					<h4>Giveaways actifs</h4>
					<div class="overview-value">{giveaways.filter(g => g.status === 'active').length}</div>
					<span class="overview-change text-warning">En cours</span>
				</div>
			</div>
		</div>
	</section>

	<!-- Main Admin Grid -->
	<div class="admin-grid">
		<!-- Commands Management -->
		<div class="card admin-card">
			<h3>📝 Gestion des Commandes</h3>
			<p>Administrez toutes les commandes disponibles pour votre bot.</p>
			
			<div class="command-list">
				<div class="command-item">
					<span class="command-name">!aquarium</span>
					<div class="command-actions">
						<span class="status status-online">Actif</span>
						<button class="btn-icon">✏️</button>
						<button class="btn-icon">🗑️</button>
					</div>
				</div>
				<div class="command-item">
					<span class="command-name">!discord</span>
					<div class="command-actions">
						<span class="status status-online">Actif</span>
						<button class="btn-icon">✏️</button>
						<button class="btn-icon">🗑️</button>
					</div>
				</div>
				<div class="command-item">
					<span class="command-name">!giveaway</span>
					<div class="command-actions">
						<span class="status status-online">Actif</span>
						<button class="btn-icon">✏️</button>
						<button class="btn-icon">🗑️</button>
					</div>
				</div>
				<div class="command-item">
					<span class="command-name">!help</span>
					<div class="command-actions">
						<span class="status status-online">Actif</span>
						<button class="btn-icon">✏️</button>
						<button class="btn-icon">🗑️</button>
					</div>
				</div>
				<div class="command-item">
					<span class="command-name">!socials</span>
					<div class="command-actions">
						<span class="status status-online">Actif</span>
						<button class="btn-icon">✏️</button>
						<button class="btn-icon">🗑️</button>
					</div>
				</div>
			</div>
			
			<button class="btn btn-primary mt-3">+ Ajouter une commande</button>
		</div>

		<!-- Giveaways Management -->
		<div class="card admin-card">
			<div class="card-header">
				<h3>🎁 Gestion des Giveaways</h3>
				<button class="btn btn-secondary">+ Nouveau Giveaway</button>
			</div>
			<p>Créez et gérez vos concours facilement.</p>

			<div class="giveaway-list">
				{giveaways.map(giveaway => (
					<div class="giveaway-item">
						<div class="giveaway-info">
							<h4>{giveaway.title}</h4>
							<p>{giveaway.description}</p>
							<div class="giveaway-meta">
								<span>👥 {giveaway.participants} participants</span>
								<span>📅 Fin: {giveaway.endDate}</span>
							</div>
						</div>
						<div class="giveaway-actions">
							<span class={`status ${giveaway.status === 'active' ? 'status-online' : 'status-offline'}`}>
								{giveaway.status === 'active' ? 'Actif' : 'Terminé'}
							</span>
							{giveaway.status === 'active' ? (
								<>
									<button class="btn btn-warning">✏️ Modifier</button>
									<button class="btn btn-success">🎲 Tirer au sort</button>
								</>
							) : (
								<button class="btn btn-outline">👁️ Voir résultats</button>
							)}
						</div>
					</div>
				))}
			</div>
		</div>

		<!-- Recent Activity -->
		<div class="card admin-card">
			<h3>📈 Activité récente</h3>
			<p>Suivez l'utilisation des commandes en temps réel.</p>

			<div class="activity-list">
				{recentCommands.map(cmd => (
					<div class="activity-item-small">
						<div class="activity-user">👤 {cmd.user}</div>
						<div class="activity-command">{cmd.command}</div>
						<div class="activity-time">{cmd.time}</div>
					</div>
				))}
			</div>
			
			<button class="btn btn-outline mt-3">Voir plus d'activité</button>
		</div>

		<!-- Webhook Data -->
		<div class="card admin-card">
			<h3>👥 Données Webhook</h3>
			<p>Consultez les données automatiquement synchronisées.</p>

			<div class="webhook-tabs">
				<button class="tab-btn active" onclick="showWebhookTab('stats')">📊 Statistiques</button>
				<button class="tab-btn" onclick="showWebhookTab('users')">👤 Utilisateurs</button>
				<button class="tab-btn" onclick="showWebhookTab('passes')">🎫 Passes</button>
			</div>

			<div class="webhook-content">
				<div id="webhook-stats" class="tab-content">
					<div class="webhook-stats">
						<div class="webhook-stat">
							<h4>Total Utilisateurs</h4>
							<div class="stat-value">{webhookStats.totalUsers.toLocaleString()}</div>
						</div>
						<div class="webhook-stat">
							<h4>Total Passes</h4>
							<div class="stat-value">{webhookStats.totalPasses}</div>
						</div>
						<div class="webhook-stat">
							<h4>Activité Aujourd'hui</h4>
							<div class="stat-value">{webhookStats.todayActivity}</div>
						</div>
					</div>
				</div>

				<div id="webhook-users" class="tab-content" style="display: none;">
					<div class="webhook-list">
						<div class="webhook-item">
							<span>👤 User123</span>
							<span class="text-secondary">1,247 points</span>
						</div>
						<div class="webhook-item">
							<span>👤 GamerPro</span>
							<span class="text-secondary">892 points</span>
						</div>
						<div class="webhook-item">
							<span>👤 StreamFan</span>
							<span class="text-secondary">654 points</span>
						</div>
					</div>
				</div>

				<div id="webhook-passes" class="tab-content" style="display: none;">
					<div class="webhook-list">
						<div class="webhook-item">
							<span>🎫 Pass Premium</span>
							<span class="text-success">Actif</span>
						</div>
						<div class="webhook-item">
							<span>🎫 Pass VIP</span>
							<span class="text-success">Actif</span>
						</div>
						<div class="webhook-item">
							<span>🎫 Pass Standard</span>
							<span class="text-warning">Expiré</span>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>

	<!-- Quick Actions -->
	<section class="quick-actions">
		<h2 class="section-title">⚡ Actions rapides</h2>
		<div class="actions-grid">
			<button class="action-btn">
				<div class="action-icon">🔄</div>
				<span>Redémarrer Bot</span>
			</button>
			<button class="action-btn">
				<div class="action-icon">📊</div>
				<span>Exporter Stats</span>
			</button>
			<button class="action-btn">
				<div class="action-icon">🧹</div>
				<span>Nettoyer Logs</span>
			</button>
			<button class="action-btn">
				<div class="action-icon">⚙️</div>
				<span>Configuration</span>
			</button>
			<button class="action-btn">
				<div class="action-icon">💾</div>
				<span>Sauvegarder</span>
			</button>
			<button class="action-btn">
				<div class="action-icon">📋</div>
				<span>Voir Logs</span>
			</button>
		</div>
	</section>
</Layout>

<style>
	.admin-header {
		text-align: center;
		margin-bottom: 3rem;
	}

	.page-title {
		font-size: 2.5rem;
		font-weight: 700;
		margin-bottom: 0.5rem;
		background: linear-gradient(135deg, var(--primary), var(--secondary));
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-clip: text;
	}

	.page-subtitle {
		font-size: 1.125rem;
		color: var(--text-secondary);
	}

	/* Status Section */
	.status-section {
		margin-bottom: 3rem;
	}

	.status-cards {
		display: grid;
		gap: 2rem;
	}

	.status-card {
		background: var(--surface);
		border: 1px solid var(--border);
		border-radius: 16px;
		padding: 2rem;
		display: flex;
		align-items: center;
		gap: 2rem;
	}

	.status-icon {
		font-size: 3rem;
	}

	.status-info {
		flex-grow: 1;
	}

	.status-info h3 {
		margin-bottom: 0.5rem;
		color: var(--text-primary);
	}

	.status-info p {
		color: var(--text-secondary);
		margin: 0.5rem 0 0 0;
	}

	.status-actions {
		display: flex;
		gap: 1rem;
	}

	/* Overview Section */
	.overview-section {
		margin-bottom: 3rem;
	}

	.overview-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
		gap: 2rem;
	}

	.overview-card {
		background: var(--surface);
		border: 1px solid var(--border);
		border-radius: 12px;
		padding: 1.5rem;
		display: flex;
		align-items: center;
		gap: 1rem;
		transition: all 0.3s ease;
	}

	.overview-card:hover {
		border-color: var(--secondary);
		transform: translateY(-2px);
	}

	.overview-icon {
		font-size: 2rem;
		background: var(--surface-light);
		width: 48px;
		height: 48px;
		border-radius: 50%;
		display: flex;
		align-items: center;
		justify-content: center;
		flex-shrink: 0;
	}

	.overview-content h4 {
		font-size: 0.875rem;
		color: var(--text-secondary);
		margin-bottom: 0.25rem;
	}

	.overview-value {
		font-size: 1.5rem;
		font-weight: 700;
		color: var(--text-primary);
		margin-bottom: 0.25rem;
	}

	.overview-change {
		font-size: 0.75rem;
		font-weight: 500;
	}

	/* Admin Grid */
	.admin-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
		gap: 2rem;
		margin-bottom: 3rem;
	}

	.admin-card {
		min-height: 400px;
	}

	.card-header {
		display: flex;
		justify-content: space-between;
		align-items: flex-start;
		margin-bottom: 1rem;
	}

	.card-header h3 {
		margin-bottom: 0;
	}

	/* Command List */
	.command-list {
		margin-top: 1.5rem;
	}

	.command-item {
		display: flex;
		justify-content: space-between;
		align-items: center;
		padding: 1rem 0;
		border-bottom: 1px solid var(--border);
	}

	.command-item:last-child {
		border-bottom: none;
	}

	.command-name {
		font-family: 'Courier New', monospace;
		font-weight: 600;
		color: var(--secondary);
		background: var(--surface-light);
		padding: 0.25rem 0.5rem;
		border-radius: 4px;
	}

	.command-actions {
		display: flex;
		align-items: center;
		gap: 1rem;
	}

	.btn-icon {
		background: none;
		border: none;
		cursor: pointer;
		padding: 0.5rem;
		border-radius: 4px;
		transition: all 0.3s ease;
		color: var(--text-secondary);
	}

	.btn-icon:hover {
		background: var(--surface-light);
		color: var(--text-primary);
	}

	/* Giveaway List */
	.giveaway-list {
		margin-top: 1.5rem;
	}

	.giveaway-item {
		background: var(--surface-light);
		border-radius: 8px;
		padding: 1.5rem;
		margin-bottom: 1rem;
	}

	.giveaway-item:last-child {
		margin-bottom: 0;
	}

	.giveaway-info h4 {
		color: var(--text-primary);
		margin-bottom: 0.5rem;
	}

	.giveaway-info p {
		color: var(--text-secondary);
		margin-bottom: 1rem;
		font-size: 0.9rem;
	}

	.giveaway-meta {
		display: flex;
		gap: 1rem;
		font-size: 0.875rem;
		color: var(--text-secondary);
		margin-bottom: 1rem;
	}

	.giveaway-actions {
		display: flex;
		gap: 1rem;
		align-items: center;
		flex-wrap: wrap;
	}

	/* Activity List */
	.activity-list {
		margin-top: 1.5rem;
	}

	.activity-item-small {
		display: grid;
		grid-template-columns: 1fr auto auto;
		gap: 1rem;
		padding: 0.75rem 0;
		border-bottom: 1px solid var(--border);
		align-items: center;
	}

	.activity-item-small:last-child {
		border-bottom: none;
	}

	.activity-user {
		font-weight: 500;
		color: var(--text-primary);
	}

	.activity-command {
		font-family: 'Courier New', monospace;
		color: var(--secondary);
		background: var(--surface-light);
		padding: 0.25rem 0.5rem;
		border-radius: 4px;
		font-size: 0.875rem;
	}

	.activity-time {
		font-size: 0.875rem;
		color: var(--text-secondary);
		text-align: right;
	}

	/* Webhook Tabs */
	.webhook-tabs {
		display: flex;
		gap: 0.5rem;
		margin-top: 1.5rem;
		margin-bottom: 1rem;
	}

	.tab-btn {
		padding: 0.5rem 1rem;
		background: var(--surface-light);
		border: 1px solid var(--border);
		border-radius: 6px;
		color: var(--text-secondary);
		cursor: pointer;
		transition: all 0.3s ease;
	}

	.tab-btn.active,
	.tab-btn:hover {
		background: var(--secondary);
		color: var(--background);
		border-color: var(--secondary);
	}

	.webhook-stats {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
		gap: 1rem;
	}

	.webhook-stat {
		text-align: center;
		background: var(--surface-light);
		padding: 1rem;
		border-radius: 8px;
	}

	.webhook-stat h4 {
		font-size: 0.875rem;
		color: var(--text-secondary);
		margin-bottom: 0.5rem;
	}

	.webhook-list {
		display: flex;
		flex-direction: column;
		gap: 0.5rem;
	}

	.webhook-item {
		display: flex;
		justify-content: space-between;
		align-items: center;
		padding: 0.75rem;
		background: var(--surface-light);
		border-radius: 6px;
	}

	/* Quick Actions */
	.quick-actions {
		margin-bottom: 3rem;
	}

	.actions-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
		gap: 1rem;
	}

	.action-btn {
		display: flex;
		flex-direction: column;
		align-items: center;
		gap: 0.5rem;
		padding: 1.5rem;
		background: var(--surface);
		border: 1px solid var(--border);
		border-radius: 12px;
		cursor: pointer;
		transition: all 0.3s ease;
		color: var(--text-primary);
	}

	.action-btn:hover {
		border-color: var(--secondary);
		transform: translateY(-2px);
		box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
	}

	.action-icon {
		font-size: 2rem;
	}

	/* Responsive */
	@media (max-width: 768px) {
		.admin-grid {
			grid-template-columns: 1fr;
		}

		.status-card {
			flex-direction: column;
			text-align: center;
		}

		.status-actions {
			justify-content: center;
		}

		.giveaway-actions {
			justify-content: center;
		}

		.webhook-tabs {
			flex-wrap: wrap;
		}
	}
</style>

<script>
	function showWebhookTab(tabName) {
		// Hide all tab contents
		document.querySelectorAll('.tab-content').forEach(content => {
			content.style.display = 'none';
		});
		
		// Remove active class from all tabs
		document.querySelectorAll('.tab-btn').forEach(btn => {
			btn.classList.remove('active');
		});
		
		// Show selected tab content
		document.getElementById(`webhook-${tabName}`).style.display = 'block';
		
		// Add active class to clicked tab
		event.target.classList.add('active');
	}
</script>